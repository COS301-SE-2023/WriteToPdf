name: Test Codebase

on:
  push:
    branches: [ test ]
  pull_request:
    branches: [ test ]

env:
  JWT_SECRET_KEY: ${{ secrets.JWT_SECRET_KEY }}
  DB_TYPE: ${{ secrets.DB_TYPE }}
  DB_HOST: ${{ secrets.DB_HOST }}
  DB_PORT: ${{ secrets.DB_PORT }}
  DB_USERNAME: ${{ secrets.DB_USERNAME }}
  DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
  DB_NAME: ${{ secrets.DB_NAME }}
  PEPPER: ${{ secrets.PEPPER }}
  TEST_EMAIL: ${{ secrets.TEST_EMAIL }}
  TEST_PASSWORD: ${{ secrets.TEST_PASSWORD }}
  TEST_SALT: ${{ secrets.TEST_SALT }}
  DB_TEST_PASSWORD: ${{ secrets.DB_TEST_PASSWORD }}

jobs:
  test_backend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16.x'
          cache: 'npm'
          cache-dependency-path: backend/package-lock.json
        
      - name: Install dependencies
        working-directory: backend
        run: npm install
      
      - name: Run backend tests
        working-directory: backend
        run: npm run test

  test_integration:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16.x'
          cache: 'npm'
          cache-dependency-path: backend/package-lock.json
        
      - name: Install dependencies
        working-directory: backend
        run: npm install

      - name: Run integration tests
        working-directory: backend
        run: npm run test:e2e
    
  test_e2e:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16.x'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json
      
      - name: Install backend dependencies
        working-directory: backend
        run: npm install

      - name: Serve backend
        working-directory: backend
        run: npm run start &
          
      - name: Install frontend dependencies
        working-directory: frontend
        run: npm install
      
      - name: Serve the application
        working-directory: frontend
        run: npm run start &

      - name: Wait for the application to start
        working-directory: frontend
        run: sleep 5s

      - name: Run frontend tests
        working-directory: frontend
        run: npm run test